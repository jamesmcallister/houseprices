resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: git-pull-requests
  type: pull-request
  source:
    access_token: {{github_access_token}}
    private_key: {{private_key}}
    repo: jamesmcallister/uk-analytics
    url: "git@github.com:jamesmcallister/uk-analytics.git"
    every: true

- name: source-code
  type: git
  source:
    uri: git@github.com:jamesmcallister/uk-analytics.git
    branch: jestconcourse
    private_key: {{private_key}}
  ignore_paths:
  - "docker"

- name: worker-source-code
  type: git
  source:
    uri: git@github.com:jamesmcallister/uk-analytics.git
    branch: jestconcourse
    private_key: {{private_key}}
  paths:
  - "docker/worker"

- name: mc-source-code
  type: git
  source:
    uri: git@github.com:jamesmcallister/uk-analytics.git
    branch: jestconcourse
    private_key: {{private_key}}
  paths:
  - "docker/mc"

- name: pipeline-worker
  type: docker-image
  source:
    repository: "concourse-registry:5000/pipeline-worker"
    insecure_registries: ["concourse-registry:5000"]


- name: mc
  type: docker-image
  source:
    repository: "concourse-registry:5000/mc"
    insecure_registries: ["concourse-registry:5000"]

jobs:
- name: pull-reqests
  serial: true
  plan:
  - get:  git-pull-requests
    trigger: true
    version: every
  - get: mc
  - get: pipeline-worker
  - task: fetch-cache
    image: mc
    config:
      platform: linux
      outputs:
        - name: npmcache-in
      run:
        path: sh
        args:
        - -exc
        - |
          mc cp --recursive minio/npmcache fetched
          mv fetched/npmcache/* npmcache-in
  - task: npm-test
    image: pipeline-worker
    config:
      platform: linux
      inputs:
        - name: git-pull-requests
        - name: npmcache-in
      outputs:
        - name: npmcache-out
      run:
        path: bash
        args:
        - -exc
        - |
          . ~/.bashrc
          pushd git-pull-requests
            mkdir node_modules
            mkdir ~/.npm
            tar xzf ../npmcache-in/npmcache.tar.gz -C node_modules
            tar xzf ../npmcache-in/npm.tar.gz -C ~/.npm
            npm install -DE
            npm run unit
            npm run int
            tar czf ../npmcache-out/npmcache.tar.gz -C node_modules .
            tar czf ../npmcache-out/npm.tar.gz -C ~/.npm .
          popd
    on_success:
      put:  git-pull-requests
      params:
        path: git-pull-requests
        status: success
    on_failure:
      put:  git-pull-requests
      params:
        path: git-pull-requests
        status: failure

- name: nodejs-worker-build
  serial: true
  plan:
  - get: worker-source-code

    trigger: true
  - put: pipeline-worker
    params:
      build: worker-source-code/docker/worker

- name: mc-worker-build
  serial: true
  plan:
  - get: mc-source-code
    trigger: true
  - put: mc
    params:
      build: mc-source-code/docker/mc

- name: minio-setup
  plan:
  - get: mc
    passed:
    - mc-worker-build
    trigger: true
  - task: say-hello
    image: mc
    config:
      platform: linux
      run:
        path: sh
        args:
        - -exc
        - |
          mc rm --force --recursive minio/npmcache || echo "didn't exist"
          mc mb minio/npmcache
          mkdir test
          mkdir npmcache
          echo test >> test/test
          tar czf npmcache/npmcache.tar.gz -C test .
          tar czf npmcache/npm.tar.gz -C test .
          mc cp npmcache/* minio/npmcache/
- name: npm test
  serial: true
  plan:
  - get: pipeline-worker
    passed:
     - nodejs-worker-build
  - get: mc
    passed:
     - minio-setup
  - get: source-code
    trigger: true
  - task: fetch-cache
    image: mc
    config:
      platform: linux
      outputs:
        - name: npmcache-in
      run:
        path: sh
        args:
        - -exc
        - |
          mc cp --recursive minio/npmcache fetched
          mv fetched/npmcache/* npmcache-in
  - task: npm-test
    image: pipeline-worker
    config:
      platform: linux
      inputs:
        - name: source-code
        - name: npmcache-in
      outputs:
        - name: npmcache-out
      run:
        path: bash
        args:
        - -exc
        - |
          . ~/.bashrc
          pushd source-code
            mkdir node_modules
            mkdir ~/.npm
            tar xzf ../npmcache-in/npmcache.tar.gz -C node_modules
            tar xzf ../npmcache-in/npm.tar.gz -C ~/.npm
            npm install -DE
            tar czf ../npmcache-out/npmcache.tar.gz -C node_modules .
            tar czf ../npmcache-out/npm.tar.gz -C ~/.npm .
          popd
  - task: npmcache-to-minio
    image: mc
    config:
      platform: linux
      inputs:
        - name: npmcache-out
      run:
        path: sh
        args:
        - -exc
        - |
          mc cp npmcache-out/* minio/npmcache/
